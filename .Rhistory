library(RRCF)
library(RRCF)
library(RRCF)
library(RRCF)
genData <- function(N, prob.vec, mean.vec, sd.vec )
{
k = length(prob.vec)
components <- sample(1:k, prob = prob.vec, size = N, replace = TRUE)
y <- rnorm(n = N, mean = mean.vec[components], sd = sd.vec[components])
return(list(y = y, class = components))
}
prob.vec = c(0.1, 0.5, 0.4)
mns = c(-1, 0, 1)
sds = c(0.05, 0.05, 0.05)
N = 100
prob.vec = c(0.1, 0.5, 0.4)
mean.vec = c(-1, 0, 1)
sd.vec = c(0.05, 0.05, 0.05)
k = length(prob.vec)
k
components <- sample(1:k, prob = prob.vec, size = N, replace = TRUE)
components
mean.vec[components]
sd.vec[components]
y <- rnorm(n = N, mean = mean.vec[components], sd = sd.vec[components])
y
hist(y)
mean.vec
mean.vec[components]
require(MCMCpack)
install.packages(MCMCpack)
install.packages("MCMCpack")
pi = rexp(10,rate = 1)
pi
pi = pi/sum(pi)
pi
phi = rnorm(10)
p = 10
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
phi = rnorm(p)
p = 10
phi = rnorm(p)
ind = (1:p)
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
z_k = min(log(pi[ind]) - phi[ind])
z_k
z_k = which.min(log(pi[ind]) - phi[ind])
z_k
ind = ind[-z_k]
ind
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
z_k = which.min(log(pi[ind]) - phi[ind])
z_k
pi
phi
log(pi[ind])
pi[ind]
ind
ind
pi
p = 10
phi = rnorm(p)
ind = (1:p)
p = 10
phi = rnorm(p)
ind = (1:p)
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
ind = ind[-z_k]
z_k
ind
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
z_k
ind = ind[-z_k]
ind
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
ord[k] = z_k
ind = ind[-z_k]
}
ord[k] = z_k
ord
ind
p = length(ind)
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
cat("inner is ", which.min(log(pi[ind]) - phi[ind]), "\n")
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
cat("ord is ", z_k, "\n")
ord[k] = z_k
ind = ind[-z_k]
}
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
cat("inner is ", which.min(log(pi[ind]) - phi[ind]), "\n")
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
cat("ord is ", z_k, "\n")
print(ord)
ord[k] = z_k
ind = ind[-z_k]
}
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
cat("inner is ", which.min(log(pi[ind]) - phi[ind]), "\n")
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
cat("ord is ", z_k, "\n")
print(ord)
ord[k] = z_k
ind = ind[-z_k]
}
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
cat("inner is ", which.min(log(pi[ind]) - phi[ind]), "\n")
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
cat("ord is ", z_k, "\n")
print(ind)
ord[k] = z_k
ind = ind[-z_k]
}
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
cat("inner is ", which.min(log(pi[ind]) - phi[ind]), "\n")
z_k = ind[which.min(log(pi[ind]) - phi[ind])]
cat("ord is ", z_k, "\n")
ord[k] = z_k
ind = ind[-z_k]
print(ind)
}
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
cat("inner is ", which.min(log(pi[ind]) - phi[ind]), "\n")
z_k = which.min(log(pi[ind]) - phi[ind])
cat("ord is ", ind[z_k], "\n")
ord[k] = ind[z_k]
ind = ind[-z_k]
print(ind)
}
log(pi[ind]) - phi[ind]
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
cat("inner is ", which.min(log(pi[ind]) - phi[ind]), "\n")
z_k = which.min(log(pi) - phi)
cat("ord is ", ind[z_k], "\n")
ord[k] = ind[z_k]
ind = ind[-z_k]
print(ind)
}
ind
length(ind)
pi
pi
which.min(log(pi[ind]) - phi[ind])
which.min(log(pi) - phi)
phi
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
phi = rnorm(p)
cat("inner is ", which.min(log(pi - phi), "\n")
z_k = which.min(log(pi) - phi)
cat("ord is ", ind[z_k], "\n")
ord[k] = ind[z_k]
ind = ind[-z_k]
print(ind)
}
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for( k in 1:p)
{
for(k in 1:p)
{
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
phi = rnorm(p)
cat("inner is ", which.min(log(pi - phi), "\n")
z_k = which.min(log(pi) - phi)
cat("ord is ", ind[z_k], "\n")
ord[k] = ind[z_k]
ind = ind[-z_k]
print(ind)
}
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for(k in 1:p)
{
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
phi = rnorm(p)
cat("inner is ", which.min(log(pi - phi), "\n")
z_k = which.min(log(pi) - phi)
cat("ord is ", ind[z_k], "\n")
ord[k] = ind[z_k]
ind = ind[-z_k]
print(ind)
}
p = 10
phi = rnorm(p)
ind = (1:p)
ord = c()
for(k in 1:p)
{
p = length(ind)
pi = rexp(p,rate = 1)
pi = pi/sum(pi)
phi = rnorm(p)
cat("inner is ", which.min(log(pi - phi)), "\n")
z_k = which.min(log(pi) - phi)
cat("ord is ", ind[z_k], "\n")
ord[k] = ind[z_k]
ind = ind[-z_k]
print(ind)
}
ind
ord
